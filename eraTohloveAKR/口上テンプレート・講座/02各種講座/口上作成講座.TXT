【대사품성강좌】
eratohoA 및 eratohoA를 베이스로 한 바리안트에 있어서의대사품성에 대한 강좌입니다.

【목차】
1. 기본적인 일
2. 대사 템플릿의 사용법
3. 대사 템플릿의 개조
4. 대사 템플릿의 구조
5. debug에 대해


【1. 기본적인 일】

　입위에 대해서,이하의 항은 파악해 두어 주세요.

　·대사의 비평에 대해
　부정의 태연히 지나가는 풍토라면 창작을 위축 할 수도 있기 때문에,대사의 비평 따위는 말을 선택해 실시하는 것

　·입우에우치의 캐릭터 이미지에 대해
　에로나 연애가 없는 작품의 캐릭터는 성에 대한 반응은 여러가지 것으로,캐릭터 이미지에 맞지 않아도 신경쓰지 않는 편이 좋다

　·대사을 썼을 때의 주의 사항
　대사을 썼을 경우,대사도 eramaker와 같게 open source인 것으로 가필의 가부는 readme등으로 의사 표시를 할 필요가 있습니다.
　표시하지 않으면 기본적으로 가능이라고 보여지기 때문에,주의해 주세요.

　·대사의 가필을 했을 경우의 주의 사항
　사용하도록 해 받은대사의 명기를 해 둔다
　가필,개변하도록 해 받은 부위의 명기를 해 둔다
　딴사람에 의한 가필,개변인 것의 명기해 둔다
　원래의 작자에게로의 감사의 말을 첨부해 둔다


【2. 대사 템플릿의 사용법】

　대사 템플릿이란,eramaker에 대해,조교하고 있는 캐릭터의 대사나 묘사를 더하는 함수군을 정리한 파일입니다. 우선 처음에 템플릿내의 X1 및 X2를 캐릭터 번호에 치환(캐릭터 번호가 1자리수의 경우,X2는 01,07과 같이 0을 포함한 2자리수로 한다) 해 주세요. 대부분의 텍스트 문자 편집기라면 Ctrl+R로 치환 메뉴가 나옵니다. 템플릿내의 조건을 보면서 PRINTFORMW의후에 대사 따위를 더해 파일을 ERB 폴더에 넣으면,조건에 응해 캐릭터의대사이 표시됩니다.
　대사을 쓰는 때는,텍스트 문자 편집기를 준비합시다. 『사쿠라 에디터』라고,『사쿠라 에디터용 키워드·단어·사전 파일』을 이용하는 것으로,입력 도중에 Ctrl+스페이스에서 단어의 후보를 내는 기능,단어를 선택한다고 단어의 설명을 볼 수 있는 기능,올바른 단어의 색은 바뀌는 기능을 기억해 둔다 따위의 편리한 기능을 사용할 수 있기 (위해)때문에,처음은 이것을 도입하는 것을 추천합니다. 특히 구문을 만지는 관심이 없어도,도입해 두어 손해 보는 일은 없을 것입니다.
　상기 2개,및 다른 편리한 툴은 이쪽의 URL 페이지에 정리해 있으므로,참조해 봐 주세요. (http://www7.atwiki.jp/eratoho/pages/103. html)


　·텍스트 함수에 대해
　텍스트 함수란,종래에 있던 묘사 텍스트를 EVENT_M.ERB에 정리해,독립한 함수로 한 것입니다. 정경 텍스트가 ON로대사이 OFF였거나대사 파일이 없는 경우에는 텍스트 함수의 내용이 표시됩니다.
　예를 들면,조교 커맨드에 대해서는,CALL TRAIN_MESSAGE로 정경 텍스트를 표시시켜,표시되는 텍스트는 EVENT_M.ERB의@MESSAGE_COMX(X는 커맨드 번호)를 참조하는 것으로 내용을 파악할 수가 있습니다. 대사은 기본적으로 정경 텍스트와 동시에 표시되기 (위해)때문에,EVENT_M.ERB를 참조하면서 써 가면 좋을 것입니다. 그 밖에도,커맨드 실행후의 변화에 있어서의 텍스트 함수나 각인 취득시의 텍스트 함수,조교외 이벤트시의 텍스트 함수가 있습니다.
　또,이것들의 텍스트 함수는대사 기능을 사용하는 경우에 대해대사 파일로부터 호출합니다. 텍스트 함수의 전에대사 텍스트를 가져오는 것으로,묘사 텍스트의 앞에대사을 쓸 수가 있습니다. 게다가 텍스트 함수를 지우는 것으로,묘사 텍스트를 변경하는 일도 가능하게 되어 있습니다.

IF SELECTCOM == 0
	CALL TRAIN_MESSAGE
	;연모,친애
	IF TALENT:3 || TALENT:6
		PRINTFORMW 
	ELSE
		PRINTFORMW 
	ENDIF
ENDIF

　예를 들면 이러한 구문에 대해,연모나친애때에 정경 텍스트를 변경하는 경우에는 이하와 같이해 주세요.

IF SELECTCOM == 0
	;연모,친애
	IF TALENT:3 || TALENT:6
		PRINTFORMW (변경한 정경 텍스트의 내용)
		PRINTFORMW 
	ELSE
		CALL TRAIN_MESSAGE
		PRINTFORMW 
	ENDIF
ENDIF


　·엑스트라 구문에 대해
　엑스트라 구문이란,첫회 조교 개시시에 선택지를 표시할 수가 있는 구문입니다. 이것은,대사을 쓴 캐릭터의 이미지와 CSV에 의한 캐릭터 이미지와의 차이를 묻기 위한 소질,능력 변경이 기본적인 사용법입니다만,입우에우치에서 파라미터를 변동시키거나 독자적인 이벤트를 짜넣는다 따위의 게임 밸런스에 영향을 미치는 기능의 사용의 유무를 묻기 위해서(때문에)도 사용합니다.
기본적으로대사 기능은 대사를 표시하기 위한 것으로,입우에우치에서 경험이나 구슬이 가산되거나 소질이 추가되는 것은,사용의 유무를 물을 수 있도록(듯이)해 두도록(듯이)합시다.

;--------------------------------------------------
;엑스트라 모드 구문 CFLAG:220을 사용
;네를 선택했을 때에 첫조교시에대사 설정용의 소질로 변경할 수 있습니다
;아래와 같이에처녀화하는 경우의 구문을 샘플로서 실어 둡니다
;-------------------------------------------------
;IF CFLAG:220 == 0
;	PRINTL 처녀모드로 이행합니까?
;	PRINTL [0] 네
;	PRINTL [1] 아니오
;	$INPUT_LOOP
;	INPUT
;	IF RESULT == 0
;		PRINTFORMW -처녀모드에 소질,능력을 변경합니다―
;		TALENT:TARGET:0 = 1
;		ABL:TARGET:4 = 0
;		EXP:TARGET:0 = 0
;	ELSEIF RESULT == 1
;		PRINTFORMW -통상 모드로 조교를 개시합니다―
;	ELSE
;		GOTO INPUT_LOOP
;	ENDIF
;	CFLAG:220 = 1
;ENDIF

　엑스트라 구문은 이와 같이 되어 있습니다. 우선은,IF CFLAG:220~ENDIF의 줄머리에 있는;을 소거해,eramaker로 구문을 읽도록(듯이)합니다.

;--------------------------------------------------
;엑스트라 모드 구문 CFLAG:220을 사용
;네를 선택했을 때에 첫조교시에대사 설정용의 소질로 변경할 수 있습니다
;아래와 같이에처녀화하는 경우의 구문을 샘플로서 실어 둡니다
;-------------------------------------------------
IF CFLAG:220 == 0
	PRINTL 처녀모드로 이행합니까?
	PRINTL [0] 네
	PRINTL [1] 아니오
	$INPUT_LOOP
	INPUT
	IF RESULT == 0
		PRINTFORMW -처녀모드에 소질,능력을 변경합니다―
		TALENT:TARGET:0 = 1
		ABL:TARGET:4 = 0
		EXP:TARGET:0 = 0
ELSEIF RESULT == 1
		PRINTFORMW -통상 모드로 조교를 개시합니다―
	ELSE
		GOTO INPUT_LOOP
	ENDIF
	CFLAG:220 = 1
ENDIF

　기본적으로 만지는 것은,아래와 같은 부분만됩니다.

	PRINTL 처녀모드로 이행합니까? ←모드의 설명,변화하는 능력 따위의 설명
	PRINTL [0] 네
	PRINTL [1] 아니오
	$INPUT_LOOP
	INPUT
	IF RESULT == 0
		PRINTFORMW -처녀모드에 소질,능력을 변경합니다― ←모드,변화의 설명 따위
		TALENT:TARGET:0 = 1　　 ←
		ABL:TARGET:4 = 0　　　　←변화 처리,자료 폴더에 있는 변수 번호 차이 일람 따위가 참고가 됩니다.
		EXP:TARGET:0 = 0　　　　←

　또,이벤트에 의한 소질,능력,경험,구슬의 변동의 유무를 묻는다면,이하와 같이 구문을 짜면 좋을 것입니다.

;--------------------------------------------------
;엑스트라 모드 구문 CFLAG:220을 사용
;네를 선택했을 때에 첫조교시에대사 설정용의 소질로 변경할 수 있습니다
;아래와 같이에처녀화하는 경우의 구문을 샘플로서 실어 둡니다
;-------------------------------------------------
IF CFLAG:220 == 0
	PRINTL 입우에우치의 이벤트로 소질·능력·경험·구슬이 변동하도록(듯이)합니까?
	PRINTL [0] 네
	PRINTL [1] 아니오
	$INPUT_LOOP
	INPUT
	IF RESULT == 0
		PRINTFORMW -소질·능력·경험·구슬의 변동을 유효하게 했습니다―
		CFLAG:220 = 1
	ELSEIF RESULT == 1
		PRINTFORMW -소질·능력·경험·구슬의 변동을 무효로 했습니다―
		CFLAG:220 = -1
	ELSE
		GOTO INPUT_LOOP
	ENDIF
ENDIF

　이 때,소질·능력·경험·구슬 따위를 변동하는 부위를 IF CFLAG:220 > 0~ENDIF의 IF구문으로 죄어든 곳,유효하다라고 나무만 소질·능력·경험·구슬 따위가 가산되게 됩니다.


【3. 대사 템플릿의 개조】

　대사 템플릿의 디폴트의 조건은 기본적으로 위화감이 없을 필요 최저한만되고 있습니다. 그러므로,특별한 조건으로대사이 분기 하도록(듯이)하려면 대사 템플릿의 조건 분기를 개조할 필요가 있습니다. 이 항목에서는,개조에 필요한 지식과 구문을 예시해 갈 것입니다.

　·추가하는 조건에 대해
　대사을 파생시키는 조건은 소질,능력,경험 따위 등 여러가지입니다. 자신이 생각한 것처럼 조건을 파생시키면 좋을 것입니다. 소질 따위는 자료 폴더의 변수 번호 차이 일람에 실려 있으므로,이것을 참고로 하면 좋을 것입니다.
　또,조건을 추가하는 때는,가장 엄격한 조건을 최상부에 가져올 필요가 있습니다.

;함락이 끝난 상태
IF (TALENT:3 || TALENT:4 || TALENT:5 || TALENT:6 || TALENT:7 || TALENT:8) && (CFLAG:300 < 4 || FLAG:7 == 2)
	;연모,친애
	IF TALENT:3 || TALENT:6
		PRINTFORMW 
	;음란,창부
	ELSEIF TALENT:4 || TALENT:7
		PRINTFORMW 
	;복종,예속
	ELSEIF TALENT:5 || TALENT:8
		PRINTFORMW 
	ENDIF
		CFLAG:300 = 4
;친애＋봉사정신LV5 이상
ELSEIF TALENT:6 && ABL:7 >= 5 && (CFLAG:300 < 5 || FLAG:7 == 2)
	PRINTFORMW 
	CFLAG:300 = 5
;굴복각인Lv3
ELSEIF MARK:2 == 3 && (CFLAG:300 < 3 || FLAG:7 == 2)
	PRINTFORMW 
	CFLAG:300 = 3
;그 이외
ELSEIF CFLAG:300 < 2 || FLAG:7 == 2
	PRINTFORMW 
	CFLAG:300 = 2
ENDIF

　예를 들면,위와 같게 구문을 짰을 경우,친애＋봉사정신Lv5 이상을 판정하기 전에 상기의연모,친애의 항목을 읽어들여 버리기 (위해)때문에,나오는 일이 없습니다. 이 조건을 내려면,아래와 같이연모,친애의 조건보다 먼저 읽혀지도록(듯이)할 필요가 있습니다.

;친애＋봉사정신LV5 이상
IF TALENT:6 && ABL:7 >= 5 && (CFLAG:300 < 5 || FLAG:7 == 2)
	PRINTFORMW 
	CFLAG:300 = 5
;함락이 끝난 상태
ELSEIF (TALENT:3 || TALENT:4 || TALENT:5 || TALENT:6 || TALENT:7 || TALENT:8) && (CFLAG:300 < 4 || FLAG:7 == 2)
	;연모,친애
	IF TALENT:3 || TALENT:6
		PRINTFORMW 
	;음란,창부
	ELSEIF TALENT:4 || TALENT:7
		PRINTFORMW 
	;복종,예속
	ELSEIF TALENT:5 || TALENT:8
		PRINTFORMW 
	ENDIF
		CFLAG:300 = 4
;굴복각인Lv3
ELSEIF MARK:2 == 3 && (CFLAG:300 < 3 || FLAG:7 == 2)
	PRINTFORMW 
	CFLAG:300 = 3
;그 이외
ELSEIF CFLAG:300 < 2 || FLAG:7 == 2
	PRINTFORMW 
	CFLAG:300 = 2
ENDIF


　·추가 조건의 참고 구문
　여기에서는,대사에 추가하는 조건에 사용할 수 있는 기능 따위의 일례를 소개해 갈 것입니다.

　『PREVCOM에 대해』
　PREVCOM는 전회의 조교 커맨드의 커맨드 번호가 격납되고 있습니다. 애널섹스의후에펠라치오로 반응이 바뀐다 따위의 시추에이션을 실행할 수 있습니다.

　『RAND에 대해』
　RAND는,랜덤에 수치가 대입되는 변수입니다. RAND:X에는,0~X-1의 수치가 격납됩니다. 확립을 알 수 있기 쉽게,아래와 같이 구문을 짜면 좋을 것입니다.

K:1 = RAND:3
IF K:1 == 0
	PRINTFORMW 
ELSEIF K:1 == 1
	PRINTFORMW 
ELSE
	PRINTFORMW 
ENDIF

　『착의에 대해 (TEQUIP:0~6 및 FLAG:1)』
　TEQUIP:0~6은,노예가 입고 있는 옷을 나타내고 있습니다. 조교 커맨드시에 입고 있는 옷에 응해 정경 텍스트 따위를 고쳐 쓰는 것이 가능합니다. 또,FLAG:1은 노예의 초기 착의 설정입니다. 전라,반나체,속옷 모습,전착이 있습니다. 조교 개시시대사에 있어,FLAG:1을 참조해,노예에게 옷을 벗게 하거나 억지로 벗게 하거나 하는 시추에이션을 만드는 것이 가능합니다. 노예가 입고 있는 옷에 대해서는 CLOTHES.ERB,조교시에 입을 수 있는 옷에 대해서는,COMABLE.ERB를 참조해 주세요.

　『상위 함락 소질에 의한 분기』
　대사 템플릿에 대해서는,연모와친애,음란와창부,복종와예속로대사의 내용은 같게 되어 있습니다만,상위 함락 소질에 의해 조건을 분기 시킨 패턴이 있으면,취득했을 때의 기쁨도 늘어나기 (위해)때문에,추가해 보는 것도 좋을 것입니다. 또,주의점으로서 함락 소질과 상위 함락 소질은 결코 중복 하지 않기 때문에,주의해 주세요(친애를 얻으면연모가 사라진다 따위).

　『능력에 의한 분기』
　조교의 성과에 의해대사을 변화시키려면,능력(ABL)을 참조하면 좋을 것입니다. 예로서는,봉사 커맨드에 있어서의봉사정신나 SM계 커맨드에 있어서의마조끼,자위계 커맨드의자위중독등이 있습니다. 이것들은,자료 폴더의 변수 번호 차이 일람에 실려 있으므로,참고로 해 보면 좋을 것입니다.

　『후천적인 소질에 의한 분기』
　풍가슴축가슴,후타나리,임신등의 주인에게 아이템 따위로 취득하는 소질을 참조한 조건문이 있으면,재미있을 것입니다.



　·IF구문에 대해
　IF구문은,ERB 서식에 대해서는,아래와 같이 되어 있습니다.

IF   A
	A때의 처리
ELSEIF B
	A가 아니고 B때의 처리
ELSEIF C
	A도 B도 아니게 C때의 처리
ELSE
	A에서도 B도 C도 아닐 때의 처리
ENDIF

　IF와 ENDIF의 사이에 임의의 수의 ELSEIF와 하나의 ELSE만을 넣을 수가 있습니다. 또,전항에서도 말한 것처럼 위로부터 차례로 읽히기 (위해)때문에,조건의 어려운 것을 위에 둘 필요가 있습니다. IF가 연속하고 있는 구문 미스는 초심자에게는 특히 많기 때문에,주의하면 좋을 것입니다.


　·인덴트에 대해
　입우에우치의 구문은,기본적으로 인덴트가 되고 있습니다. 인덴트란,일역 하면 움푹한 곳의 일로 구문을 보기 쉽게 하기 위해서 이용합니다. 인덴트는 Tab 키를 사용하는 것으로 할 수 있어 Shift+Tab로 역인덴트가 가능합니다. 또,텍스트 문자 편집기에서는 복수행을 선택해 한 번에 인덴트 하는 일도 가능합니다.
　인덴트가되어 있지 않은 경우의 IF문은 이하와 같이 됩니다.

IF E
IF A
PRINTFORMW 
ELSEIF B
PRINTFORMW 
ENDIF
ELSE
IF C
IF D
PRINTFORMW 
ELSE
PRINTFORMW 
ENDIF
ELSE
PRINTFORMW 
ENDIF
ENDIF

　이것이라고,IF구문의 구조가 매우 이해하기 어렵습니다만,인덴트를 하면 이하와 같이 됩니다.

IF E
	IF A
		PRINTFORMW 
	ELSEIF B
		PRINTFORMW 
	ENDIF
ELSE
	IF C
		IF D
			PRINTFORMW 
		ELSE
			PRINTFORMW 
		ENDIF
	ELSE
		PRINTFORMW 
	ENDIF
ENDIF

　인덴트의 룰은,IF문의 내용을 1개 인덴트 하는 것을 반복한다고 생각해 지장 없습니다. 인덴트를 확실히 하는 것으로,대사 파일의 가독성을 향상해,버그의 수정 따위도 편해집니다.


　·각종,기호에 대해
　대사 파일내에서는,변수의 수치를 지정하는 기호와 단어의 조건을 구분하는 기호가 있습니다. 우선,단어의 수치를 지정하는 기호는 이하와 같이 되어 있습니다.

·단어의 수치를 지정하는 기호
==좌변의 단어와 우변의 수치가 동일할 때
!=좌변의 단어와 우변의 수치가 동일하지 않을 때
>=좌변의 단어가 우변의 수치보다 큰가 동일할 때
>　 좌변의 단어가 우변의 수치보다 클 때
<=좌변의 단어가 우변의 수치보다 작은가 동일할 때
<　 좌변의 단어가 우변의 수치보다 어릴 때

　=는 좌변의 단어에 우변의 수치를 대입하는 지시인 것으로,조건문에 사용하면 에러가 일어납니다. 또,우변에 수치를 지정하고 있지 않는 경우는,!= 0으로 동일 취급으로,소질은 0이나 1 밖에 없기 때문에 취득이 끝난 상태를 조건으로 하고 있는 경우는 우변을 생략 할 수가 있습니다.
단어를 연결하는 기호는,이하와 같이 되어 있습니다.

·단어를 연결하는 기호,이것들로 수치 대입된 단어를 연결해 조건문이 된다
&& 우변과 좌변의 조건을 어느쪽이나 채우는 것이 조건
|| 우변이나 좌변의 조건을 어느 쪽인지가 채우고 있는 것이 조건
() 괄호로 묶어진 부분을 하나의 단어로서 취급할 수가 있다

　예를 들면,아래와 같은 구문에서는,MARK:2 == 3한편,CFLAG:300 < 3이나 FLAG:7 == 2가 되고 있습니다. 여기서,괄호를 사용해 하나의 단어로서 취급하지 않으면,MARK:2 == 3또한 CFLAG:300 < 3인가,FLAG:7 == 2가 되어,FLAG:7이 2인 것만으로 조건이 유효하게 되어 버립니다. 그 이외에 대해서는,조건을 판정하는 단어가 2개인 것으로,괄호로 묶을 필요가 없습니다.

;굴복각인Lv3
ELSEIF MARK:2 == 3 && (CFLAG:300 < 3 || FLAG:7 == 2)
	PRINTFORMW 
	CFLAG:300 = 3
;그 이외
ELSEIF CFLAG:300 < 2 || FLAG:7 == 2
	PRINTFORMW 
	CFLAG:300 = 2


　·대사표시빈도에 대해
　대사 템플릿에서는,대사의 표시 빈도가 설정되어 있습니다. FLAG:7이 1으로 1회만 표시,2로 항상 표시,3으로 비표시입니다. 이 처리는 각 구문 마다 행해지고 있습니다.

대사표시빈도 기록용의 조건문의 설명과 추가 방법의 해설

　예를 들면,애무의대사표시빈도의 기록 처리는 이하와 같이 되어 있습니다.

IF SELECTCOM == 0
	IF CFLAG:300 == 0
		CFLAG:300 = 1
	ELSE
		IF CFLAG:300 < 4 || FLAG:7 == 2
			CFLAG:300 = 4
		ELSEIF CFLAG:300 < 3 || FLAG:7 == 2
			CFLAG:300 = 3
		ELSEIF CFLAG:300 < 2 || FLAG:7 == 2
			CFLAG:300 = 2
		ENDIF
	ENDIF
ENDIF

　이와 같이,CFLAG:300이 0의 경우는 맨 위가 불려 1이상의 때로는,ELSE의 2회째 이후가 불려 갑니다. 게다가 2회째 이후에서는,CFLAG:300이 X미만,혹은 FLAG:7이 2(항상 표시)때라고 하는 조건이 되어 있어,이 조건을 한 번이라도 표시하면 CFLAG:300에 X가 대입되고 있습니다. FLAG:7이 1(1회만 표시)의 경우에는,X가 대입되고 있다(1회에서도 표시되고 있다)(와)과 X미만이 조건의대사이 표시되지 않습니다.
　조건을 늘리는 경우에는,아래와 같이 X의 수치를 1씩 늘려 가면 할 수 있습니다.

IF SELECTCOM == 0
	IF CFLAG:300 == 0
		CFLAG:300 = 1
	ELSE
		IF CFLAG:300 < 6 || FLAG:7 == 2
			CFLAG:300 = 6
		ELSEIF CFLAG:300 < 5 || FLAG:7 == 2
			CFLAG:300 = 5
		ELSEIF CFLAG:300 < 4 || FLAG:7 == 2
			CFLAG:300 = 4
		ELSEIF CFLAG:300 < 3 || FLAG:7 == 2
			CFLAG:300 = 3
		ELSEIF CFLAG:300 < 2 || FLAG:7 == 2
			CFLAG:300 = 2
		ENDIF
	ENDIF
ENDIF

　늘린 구문으로 IF-ENDIF 구문을 만드는 것,가장 엄격한 조건을 맨 위에 가져오는 것,CFLAG:300 < X || FLAG:7 == 2를 1 단어로서 취급하기 위해서(때문에),(CFLAG:300 < X || FLAG:7 == 2)라고 괄호로 묶을 필요가 있는 것에 주의해 주세요.


【4. 대사 템플릿의 구조】

　몰라도 괜찮지만,도움이 될지도 모르는 정보 따위의 통계.
　대사 템플릿은,이하의 함수로 구성되어 있습니다.
　
조교 개시시(@EVENTTRAIN)
표시 2회째 이후의 조교 개시시(@EVENTTRAIN_SECOND_KX1)
조교 종료시(@EVENTEND)
조교 커맨드 실행시(KOJO_MESSAGE_COM_KX1)
조교자의사정시(@KOJO_MESSAGE_PALAMCNG_A_KX1)
촉수의사정시(@KOJO_MESSAGE_PALAMCNG_E_KX1)
노예의 절정시(@KOJO_MESSAGE_PALAMCNG_B_KX1)
조교후의 변화(@KOJO_MESSAGE_PALAMCNG_C_KX1)
노예의 파라미터 변화시(@KOJO_MESSAGE_PALAMCNG_D_KX1)
각인 취득시(@KOJO_MESSAGE_MARKCNG_KX1)
조교외 이벤트 발생시(@KOJO_MESSAGE_EVENT_KX1)
엔딩대사(@KOJO_MESSAGE_ENDING_KX1)

　이것들 외에대사의 존재 판정 함수와 엔딩 판정 함수가 있습니다.


　·함수 호출 플로차트(flow chart)
　대사 템플릿의 함수 호출을 플로차트(flow chart)로 하면,이하와 같이 되어 있습니다. 아래에 가는 경우는 조건을 채우고 있는(TRUE),오른쪽으로 빗나가고 있는 경우는 채우지 않은 경우(FALSE)입니다.


조교 개시
　 ↓
조교 개시시대사(@EVENTTRAIN)
　 ↓
첫회 및 능력 변화후첫회가 아니고,간이조수교섭대사이 있는 캐릭터가 조수가 아니다
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
표시 2회째 이후의 조교 개시시대사(@EVENTTRAIN_SECOND_KX1)　　　　　 ↓
 　↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
 　↓←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←
 　↓
조교 화면→조교 종료를 선택→조교 종료시대사(@EVENTEND)→조교후이벤트(@KOJO_MESSAGE_EVENT_KX1)→조교 종료 처리
　 ↓
　 ↓
조교 커맨드 실행
　 ↓
조교 커맨드 실행시대사(KOJO_MESSAGE_COM_KX1)
　 ↓
조교의 수치 처리
 　↓
조교자가사정 했을 경우 →→→→→→→→→→→→→→→→→→→→→→→→
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
조교자의사정시대사(@KOJO_MESSAGE_PALAMCNG_A_KX1)　　　　　　　　 ↓
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　  ↓
 　↓←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←
　 ↓
촉수가사정 했을 경우 →→→→→→→→→→→→→→→→→→→→→→→→→
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
촉수의사정시대사(@KOJO_MESSAGE_PALAMCNG_E_KX1)　　　　　　　　　 ↓
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
 　↓←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←
　 ↓
노예가 절정 했을 경우 →→→→→→→→→→→→→→→→→→→→→→→→→
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
노예의 절정시대사(@KOJO_MESSAGE_PALAMCNG_B_KX1)　　　　　　　　　 ↓
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　  ↓
 　↓←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←
　 ↓
조교후의 변화가 있었을 경우 →→→→→→→→→→→→→→→→→→→→→→
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
조교후의 변화시대사(@KOJO_MESSAGE_PALAMCNG_C_KX1)　　　　　　　　 ↓
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　  ↓
 　↓←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←
　 ↓
노예의 파라미터의 변화가 있었을 경우 →→→→→→→→→→→→→→→→→
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
노예의 파라미터 변화시대사(@KOJO_MESSAGE_PALAMCNG_D_KX1)　　　　 ↓
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　  ↓
 　↓←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←
　 ↓
노예가 각인을 취득했을 경우 →→→→→→→→→→→→→→→→→→→→→→
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　↓
각인 취득시대사(@KOJO_MESSAGE_MARKCNG_KX1)　 　　　　　　　　　　 ↓
　 ↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　  ↓
 　↓←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←←
　 ↓
조교 화면으로 돌아간다

보발:이벤트입우와세키수(@KOJO_MESSAGE_EVENT_KX1)는,다른 장면이라도 불린다.
　　　엔딩입우와세키수(@KOJO_MESSAGE_ENDING_KX1)는,설정을 하고 있어 조건을 채웠을 경우에 엔딩 때에 불린다.


【5. debug에 대해】

　대사이 완성하면,우선은 버그가 없는가를 조사합시다. 이쪽의 페이지(http://www7.atwiki.jp/eratoho/pages/103. html)에 있는,ERBChecker나 Emuera로 버그의 체크를 할 수 있으므로,업 로드하기 전에 시험해 일어납시다. 또,checker도 만능은 아니기 때문에,대사의 내용의 퇴고나 의도한 동작을 하는지를 확인하는데는,스스로 실제로 플레이 해 보는 것이,좋을 것입니다.


